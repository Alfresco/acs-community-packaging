alfresco.cluster.interface=127.0.0.1

##
# PostgreSQL RDBMS
##
db.name=alfresco
db.username=alfresco
db.password=alfresco
db.driver=org.postgresql.Driver
db.url=jdbc:postgresql:${db.name}
db.master.url=jdbc:postgresql:template1
db.master.username=${db.username}
db.master.password=${db.password}
db.drop.command=drop database if exists ${db.name}
db.create.command=create database ${db.name}

##
# MySQL
##
#db.name=alfresco
#db.username=alfresco
#db.password=alfresco
#db.driver=com.mysql.jdbc.Driver
#db.url=jdbc:mysql://localhost/${db.name}?useUnicode=true&characterEncoding=UTF-8
#db.master.url=jdbc:mysql://localhost/
#db.master.username=${db.username}
#db.master.password=${db.password}
#db.drop.command=drop database if exists ${db.name}
#db.create.command=create database ${db.name} CHARACTER SET utf8 COLLATE utf8_bin;

##
# Oracle
##
#db.username=alfresco
#db.password=alfresco
#db.host=localhost
#db.master.username=SYS AS SYSDBA
#db.master.password=alfresco
#db.url=jdbc:oracle:thin:@${db.host}:1521/ORCL
#db.driver=oracle.jdbc.OracleDriver
#db.drop.command=drop user ${db.username} cascade;
#db.create.command=grant connect,resource to ${db.username} identified by ${db.password};

##
# SQL Server
##
#db.name=alfresco
#db.username=alfresco
#db.password=alfresco
#db.driver=com.microsoft.sqlserver.jdbc.SQLServerDriver
#db.url=jdbc:sqlserver://${db.host};databaseName=${db.name};
#db.master.url=jdbc:sqlserver://${db.host};databaseName=master
#db.master.username=${db.username}
#db.master.password=${db.password}
#db.drop.command=drop database ${db.name};
#db.create.command=CREATE DATABASE ${db.name}; ALTER DATABASE ${db.name} SET ALLOW_SNAPSHOT_ISOLATION ON;

##
# H2
##
#db.name=alfresco
#db.username=alfresco
#db.password=alfresco
#db.params=MODE=PostgreSQL;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=10000;MVCC=TRUE
#db.driver=org.h2.jdbcx.JdbcDataSource
#db.url=${db.master.url}
#db.master.url=jdbc:h2:${test.working.dir}/h2_data/${db.name};${db.params}
#db.master.username=${db.username}
#db.master.password=${db.password}
#db.drop.command=drop database if exists ${db.name}
#db.create.command=create database ${db.name}


##
# MariaDB
##
#db.name=alfresco
#db.username=alfresco
#db.password=alfresco
#db.driver=org.gjt.mm.mysql.Driver
#db.url=jdbc:mysql://localhost/${db.name}
#db.master.url=jdbc:mysql://localhost/
#db.master.username=${db.username}
#db.master.password=${db.password}
#db.drop.command=drop database if exists ${db.name}
#db.create.command=create database ${db.name}


solr.solrPingCronExpression=0 0/30 * * * ? *
solr.secureComms=none
index.subsystem.name=solr6
solr.host=localhost
solr.port=8983
Dsolr.base.url=/solr

transform.service.enabled=true

# Check every minute rather than the default of every hour
mimetype.config.cronExpression=0 0/1 * * * ?
rendition.config.cronExpression=2 0/1 * * * ?
local.transform.service.cronExpression=4 0/1 * * * ?
transform.service.cronExpression=6 0/1 * * * ?

# To switch to 5 T-Engines set ...core-aio.url to an empty string and add in the individual urls.
# Then comment in/out images in the BAT docker-compose
#localTransform.core-aio.url=
#localTransform.pdfrenderer.url=http://localhost:8090/
#localTransform.imagemagick.url=http://localhost:8091/
#localTransform.libreoffice.url=http://localhost:8092/
#localTransform.tika.url=http://localhost:8093/
#localTransform.misc.url=http://localhost:8094/

alfresco.host=localhost
alfresco.port=8080
share.host=localhost
share.port=8080


transformer.debug.entries=10

mimetype.config.dir=dev/dev-acs-amps-overlay/target/dev-instance/tomcat/shared/classes/alfresco/extension/mimetypes
rendition.config.dir=dev/dev-acs-amps-overlay/target/dev-instance/tomcat/shared/classes/alfresco/extension/transform/renditions
local.transform.pipeline.config.dir=dev/dev-acs-amps-overlay/target/dev-instance/tomcat/shared/classes/alfresco/extension/transform/pipelines
