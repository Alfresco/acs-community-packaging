<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>content-services-community-docker</artifactId>
    <name>ACS Community Docker Image Builder</name>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.alfresco</groupId>
        <artifactId>acs-community-packaging</artifactId>
        <version>23.1.0-A28-SNAPSHOT</version>
    </parent>

    <properties>
        <image.name>alfresco/alfresco-content-repository-community</image.name>
        <docker.quay-expires.value>NEVER</docker.quay-expires.value>
        <base.image>alfresco/alfresco-community-repo-base:${repo.image.tag}</base.image>
        <scripts.directory>${project.parent.basedir}/scripts/dev</scripts.directory>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-war-files</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.alfresco</groupId>
                                    <artifactId>api-explorer</artifactId>
                                    <version>${alfresco.api-explorer.version}</version>
                                    <type>war</type>
                                    <outputDirectory>${project.build.directory}/war/api-explorer</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-amps</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.alfresco</groupId>
                                    <artifactId>alfresco-share-services</artifactId>
                                    <version>${dependency.alfresco-community-repo.version}</version>
                                    <type>amp</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${project.build.directory}/amps</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>build-docker-images</id>
            <!-- builds "image:latest" locally -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <image>
                                    <name>${image.name}:${image.tag}</name>
                                    <build>
                                        <args>
                                            <BASE_IMAGE>${base.image}</BASE_IMAGE>
                                        </args>
                                        <contextDir>${project.basedir}</contextDir>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>build-multiarch-docker-images</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <image>
                                    <name>${local.registry}/${image.name}:${image.tag}</name>
                                    <build>
                                        <buildx>
                                            <builderName>${builder.name}</builderName>
                                            <platforms>
                                                <platform>linux/amd64</platform>
                                                <platform>linux/arm64</platform>
                                            </platforms>
                                            <attestations>
                                                <provenance>false</provenance>
                                            </attestations>
                                        </buildx>
                                        <dockerFileDir>${project.basedir}</dockerFileDir>
                                        <args>
                                            <BASE_IMAGE>${local.registry}/${base.image}</BASE_IMAGE>
                                        </args>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-push-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <executions>
                            <execution>
                                <id>prepare-buildx</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${scripts.directory}/prepare_buildx.sh</executable>
                                    <arguments>
                                        <argument>${builder.name}</argument>
                                        <argument>${image.registry}</argument>
                                        <argument>${image.name}</argument>
                                        <argument>${image.tag}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>push-docker-images</id>
            <!-- publishes "image:latest" to Quay -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <images>
                                <!-- Quay image -->
                                <image>
                                    <name>${image.registry}/${image.name}:${image.tag}</name>
                                    <build>
                                        <buildx>
                                            <builderName>${builder.name}</builderName>
                                            <platforms>
                                                <platform>linux/amd64</platform>
                                                <platform>linux/arm64</platform>
                                            </platforms>
                                            <attestations>
                                                <provenance>false</provenance>
                                            </attestations>
                                        </buildx>
                                        <dockerFileDir>${project.basedir}</dockerFileDir>
                                        <args>
                                            <BASE_IMAGE>${local.registry}/${base.image}</BASE_IMAGE>
                                        </args>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-push-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <executions>
                            <execution>
                                <id>prepare-buildx</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${scripts.directory}/prepare_buildx.sh</executable>
                                    <arguments>
                                        <argument>${builder.name}</argument>
                                        <argument>${image.registry}</argument>
                                        <argument>${image.name}</argument>
                                        <argument>${image.tag}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>release</id>
            <!-- publishes "image:release_version" to DockerHub and Quay -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-push-image</id>
                                <phase>deploy</phase>
                                <configuration combine.self="override">
                                    <images>
                                        <!-- DockerHub image -->
                                        <image>
                                            <name>${image.name}:${project.version}</name>
                                            <build>
                                                <buildx>
                                                    <builderName>${builder.name}</builderName>
                                                    <platforms>
                                                        <platform>linux/amd64</platform>
                                                        <platform>linux/arm64</platform>
                                                    </platforms>
                                                    <attestations>
                                                        <provenance>false</provenance>
                                                    </attestations>
                                                </buildx>
                                                <dockerFileDir>${project.basedir}</dockerFileDir>
                                                <args>
                                                    <BASE_IMAGE>${local.registry}/${base.image}</BASE_IMAGE>
                                                </args>
                                            </build>
                                        </image>
                                    </images>
                                </configuration>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>build-push-quay-image</id>
                                <phase>deploy</phase>
                                <configuration combine.self="override">
                                    <images>
                                        <!-- Quay image -->
                                        <image>
                                            <name>${image.registry}/${image.name}:${project.version}</name>
                                            <build>
                                                <buildx>
                                                    <builderName>${builder.name}</builderName>
                                                    <platforms>
                                                        <platform>linux/amd64</platform>
                                                        <platform>linux/arm64</platform>
                                                    </platforms>
                                                    <attestations>
                                                        <provenance>false</provenance>
                                                    </attestations>
                                                </buildx>
                                                <dockerFileDir>${project.basedir}</dockerFileDir>
                                                <args>
                                                    <BASE_IMAGE>${local.registry}/${base.image}</BASE_IMAGE>
                                                </args>
                                            </build>
                                        </image>
                                    </images>
                                </configuration>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>exec-maven-plugin</artifactId>
                        <groupId>org.codehaus.mojo</groupId>
                        <executions>
                            <execution>
                                <id>prepare-buildx</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${scripts.directory}/prepare_buildx.sh</executable>
                                    <arguments>
                                        <argument>${builder.name}</argument>
                                        <argument>${image.registry}</argument>
                                        <argument>${image.name}</argument>
                                        <argument>${image.tag}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
