# dataprep related
alfresco.scheme=http
alfresco.server=localhost
alfresco.port=8082

# credentials
admin.user=admin
admin.password=admin
admin.name=Administrator

# in containers we cannot access directly JMX, so we will use http://jolokia.org agent
# disabling this we will use direct JMX calls to server
jmx.useJolokiaAgent=false

# Server Health section
# in ServerHealth#isServerReachable() - could also be shown.
# enable this option to view if on server there are tenants or not
serverHealth.showTenants=false

# IMAP Service settings from admin console
imap.server=${alfresco.server}
imap.port=143
imaps.port=993

# Inbound Email settings from admin console
smtp.server=${alfresco.server}
smtp.port=25
smtp.authentication.enabled=true
smtp.tsl.enabled=false

# Outbound Email settings from admin console
mail.encoding=UTF-8
mail.from.default=admin@alfness.com
mail.from.enabled=true
mail.host=172.29.100.164
mail.password=admin
mail.port=25
mail.protocol=smtp
mail.smtp.auth=true
mail.smtp.debug=false
mail.smtp.starttls.enable=true
mail.smtp.timeout=30000
mail.smtps.auth=true
mail.smtps.starttls.enable=true
mail.username=admin@alfness.com

# FTP related
ftp.port=21
ftp.timeout=20000
# use passive or active depending where the tests are run
# (docker env or not) 
ftp.passiveMode=true

# CMIS related
# set cmis binding to 'browser' or 'atom'
cmis.binding=browser
cmis.basePath=/alfresco/api/-default-/public/cmis/versions/1.1/${cmis.binding}

# WEBDAV related
webdav.port=${alfresco.port}

# AOS related
aos.path=/alfresco/aos
aos.windowsNetwork=\\\${alfresco.server}:${alfresco.port}${aos.path}
aos.linuxNetwork=${alfresco.scheme}://${alfresco.server}:${alfresco.port}${aos.path}

# TEST MANAGEMENT SECTION - Test Rail
#
# (currently supporting Test Rail v5.2.1.3472 integration)
#
# Example of configuration:
# ------------------------------------------------------
# if testManagement.enabled=true we enabled TestRailExecutorListener (if used in your suite xml file)
# testManagement.updateTestExecutionResultsOnly=true (this will just update the results of a test: no step will be updated - good for performance)
# testManagement.endPoint=https://alfresco.testrail.com/
# testManagement.username=<username>
# testManagement.apiKey=<api-key>
# testManagement.project=<id-of-your-project
# testManagement.testRun=<test-run-name> 
# testManagement.includeOnlyTestCasesExecuted=true #if you want to include in your run ONLY the test cases that you run, then set this value to false
# testManagement.rateLimitInSeconds=1 #is the default rate limit after what minimum time, should we upload the next request. http://docs.gurock.com/testrail-api2/introduction #Rate Limit 
# testManagement.suiteId=23 (the id of the Master suite)
# ------------------------------------------------------
testManagement.enabled=false
testManagement.endPoint=
testManagement.username=
testManagement.apiKey=
testManagement.project=7
testManagement.includeOnlyTestCasesExecuted=true
testManagement.rateLimitInSeconds=1
testManagement.testRun=MyTestRunInTestRail
testManagement.suiteId=12

# The location of the reports path
reports.path=./target/reports

#
# Database Section
# You should provide here the database URL, that can be a differed server as alfresco.
# https://docs.oracle.com/javase/tutorial/jdbc/basics/connecting.html
#
# Current supported db.url:
#
# MySQL:
# db.url = jdbc:mysql://${alfresco.server}:3306/alfresco
# 
# PostgreSQL:
# db.url = jdbc:postgresql://<your-DB-IP>:3306/alfresco
#
# Oracle:
# db.url = jdbc:oracle://<your-DB-IP>:3306/alfresco
#
# MariaDB:
# db.url = jdbc:mariadb://<your-DB-IP>:3306/alfresco
#
db.url = jdbc:mysql://${alfresco.server}:3306/alfresco
db.username = alfresco
db.password = alfresco

# ------------------------------------------------------
#WEB specific
# ------------------------------------------------------
# set browser type: Firefox, Chrome
browser.name=Firefox
browser.version=41.0
# browser.chrome.driver=/Users/p3700454/projects/drivers/chromedriver
env.platform=WINDOWS

# default implicit wait for web elements to be rendered
browser.implicitWait=3
browser.explicitWait=30

share.port=${alfresco.port}
share.url=${alfresco.scheme}://${alfresco.server}:${share.port}/share
share2.url=${server2.url}:${server2.port}/share
server2.port=9090
server2.url=http://172.29.100.215

# location of all screenshots taken on failed test
screenshots.dir=screenshots

# grid based settings
grid.enabled=false
grid.url=http://127.0.0.1:4444/wd/hub

# handle internationalization
locale.language=en
locale.country=US
