---
dist: xenial
language: java
jdk: openjdk11

services:
  - docker

git:
  depth: false
  quiet: true

cache:
  directories:
    - ${HOME}/.m2/repository

# the cache can grow constantly
before_cache: bash scripts/travis/cleanup_cache.sh

branches:
  only:
    - master
    - develop
    - /release\/.*/
    - feature/REPO-5111_repo_build
    - feature/ACS-457_travis-release-config

env:
  global:
    - TAS_SCRIPTS=../alfresco-community-repo/packaging/tests/scripts
    - TAS_ENVIRONMENT=./tests/environment
    # Must be in the format <alfresco-version>-<additional_versioning> ie. 6.3.0-repo-xxxx-x or 6.3.0-Ax
    - RELEASE_VERSION=7.0.0-TEST1
    - DEVELOPMENT_VERSION=7.0.0-TEST1-SNAPSHOT

stages:
  - name: test
    if: commit_message !~ /\[skip tests\]/
  - name: docker_latest
    if: fork = false AND type != pull_request AND branch = master
  - name: release
    if: commit_message ~= /\[release\]/ AND fork = false AND type != pull_request AND (branch =~ ^(master|develop)$ OR branch =~ /release\/.*/)
  - name: publish
    if: commit_message ~= /\[publish\]/ AND fork = false AND type != pull_request AND (branch =~ ^(master|develop)$ OR branch =~ /release\/.*/)

before_install: travis_retry bash scripts/travis/init.sh
install: travis_retry travis_wait 40 bash scripts/travis/build.sh

jobs:
  include:
    - name: "WhiteSource scan"
      stage: test
      # only on master or develop and if it is not a PR
      if: fork = false AND branch =~ ^(master|develop)$ AND type != pull_request
      install: travis_retry travis_wait 30 mvn -B -q install -f war/pom.xml
      script:
        # Download the latest version of WhiteSource Unified Agent
        - curl -LJO https://github.com/whitesource/unified-agent-distribution/releases/latest/download/wss-unified-agent.jar
        # Run WhiteSource Unified Agent
        - java -jar wss-unified-agent.jar -apiKey ${WHITESOURCE_API_KEY} -c .wss-unified-agent.config -d ./war

    - name: "REST API TAS tests part1"
      before_script:
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-minimal+transforms.yml
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 60 mvn -B install -f tests/tas-restapi/pom.xml -Pall-tas-tests,run-restapi-part1 -Denvironment=default -DrunBugs=false

    - name: "REST API TAS tests part2"
      before_script:
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-minimal+transforms.yml
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 60 mvn -B install -f tests/tas-restapi/pom.xml -Pall-tas-tests,run-restapi-part2 -Denvironment=default -DrunBugs=false

    - name: "REST API TAS tests part3"
      before_script:
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-minimal+transforms.yml
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 60 mvn -B install -f tests/tas-restapi/pom.xml -Pall-tas-tests,run-restapi-part3 -Denvironment=default -DrunBugs=false

    - name: "CMIS TAS tests"
      before_script:
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-minimal+transforms.yml
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 40 mvn -B install -f tests/tas-cmis/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false

    - name: "Email TAS tests"
      before_script:
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-minimal.yml
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 30 mvn -B install -f tests/tas-email/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false

    - name: "WebDAV TAS tests"
      before_script:
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-minimal.yml
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 20 mvn -B install -f tests/tas-webdav/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false

    - name: "Integration TAS tests"
      before_script:
        - ${TAS_SCRIPTS}/start-compose.sh ${TAS_ENVIRONMENT}/docker-compose-minimal.yml
        - ${TAS_SCRIPTS}/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 30 mvn -B install -f tests/tas-integration/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false

    - name: "Update Docker latest images"
      stage: docker_latest
      script: travis_retry travis_wait 30 mvn -B -V clean install -DskipTests -Dmaven.javadoc.skip=true -Pinternal

    - name: "Release and Copy to S3 Staging"
      stage: release
      install: travis_retry travis_wait 40 mvn -B -V clean install -DskipTests -Dmaven.javadoc.skip=true
      before_script: bash scripts/travis/verify_release_tag.sh
      script: travis_wait 40 bash scripts/travis/maven_release.sh
      before_deploy:
        # Move the final artifacts to a single folder (deploy_dir) to be copied to S3
        - mkdir -p deploy_dir
        - cp distribution/target/alfresco.war deploy_dir
        - cp distribution/target/*-distribution*.zip deploy_dir
      deploy:
        - provider: s3
          access_key_id: "${AWS_STAGING_ACCESS_KEY}"
          secret_access_key: "${AWS_STAGING_SECRET_KEY}"
          bucket: "alfresco-artefacts-staging"
          region: "eu-west-1"
          skip_cleanup: true
          acl: private
          local_dir: "deploy_dir"
          upload_dir: "alfresco-content-services-community/release/${TRAVIS_BRANCH}/${TRAVIS_BUILD_NUMBER}"
          on:
            all_branches: true
            condition: ${TRAVIS_BRANCH} =~ ^(master|develop)$

    - name: "Copy to S3 Release"
      stage: publish
      # Nothing to build/install as we are just copying from S3 buckets
      install: skip
      script: skip
      before_deploy: pip install awscli
      deploy:
        - provider: script
          script: bash scripts/travis/copy_to_release_bucket.sh
          on:
            branch: master


